# Logfile created on 2025-03-13 09:19:44 +0000 by logger.rb/v1.6.5
I, [2025-03-13T09:19:44.954405 #23521]  INFO -- : Starting example: ExpenseTracker::Ledger#expenses_on returns a blank array when there are no matching expenses
I, [2025-03-13T09:19:44.954500 #23521]  INFO -- : (0.000014s) BEGIN
I, [2025-03-13T09:19:44.954675 #23521]  INFO -- : (0.000064s) SELECT * FROM `expenses` WHERE (`date` = '2017-06-10')
I, [2025-03-13T09:19:44.955055 #23521]  INFO -- : (0.000020s) ROLLBACK
I, [2025-03-13T09:19:44.955112 #23521]  INFO -- : Ending example: ExpenseTracker::Ledger#expenses_on returns a blank array when there are no matching expenses
I, [2025-03-13T09:19:44.955303 #23521]  INFO -- : Starting example: ExpenseTracker::Ledger#expenses_on returns all expenses for the provided date
I, [2025-03-13T09:19:44.955338 #23521]  INFO -- : (0.000006s) BEGIN
I, [2025-03-13T09:19:44.955727 #23521]  INFO -- : (0.000306s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-13T09:19:44.955855 #23521]  INFO -- : (0.000043s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-13T09:19:44.955908 #23521]  INFO -- : (0.000010s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-13T09:19:44.955960 #23521]  INFO -- : (0.000013s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-13T09:19:44.956000 #23521]  INFO -- : (0.000007s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-11')
I, [2025-03-13T09:19:44.956079 #23521]  INFO -- : (0.000011s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-13T09:19:44.956248 #23521]  INFO -- : (0.000127s) SELECT * FROM `expenses` WHERE (`date` = '2017-06-10')
I, [2025-03-13T09:19:44.957948 #23521]  INFO -- : (0.000214s) ROLLBACK
I, [2025-03-13T09:19:44.957971 #23521]  INFO -- : Ending example: ExpenseTracker::Ledger#expenses_on returns all expenses for the provided date
I, [2025-03-13T09:19:44.958105 #23521]  INFO -- : Starting example: ExpenseTracker::Ledger#record successfully saves an expense in the DB
I, [2025-03-13T09:19:44.958132 #23521]  INFO -- : (0.000006s) BEGIN
I, [2025-03-13T09:19:44.958340 #23521]  INFO -- : (0.000157s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-13T09:19:44.958380 #23521]  INFO -- : (0.000015s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-13T09:19:44.959208 #23521]  INFO -- : (0.000028s) SELECT * FROM `expenses`
I, [2025-03-13T09:19:44.959725 #23521]  INFO -- : (0.000173s) ROLLBACK
I, [2025-03-13T09:19:44.959746 #23521]  INFO -- : Ending example: ExpenseTracker::Ledger#record successfully saves an expense in the DB
I, [2025-03-13T09:19:44.959861 #23521]  INFO -- : Starting example: ExpenseTracker::Ledger#record when one of the keys is missing rejects the expense as invalid
I, [2025-03-13T09:19:44.959886 #23521]  INFO -- : (0.000005s) BEGIN
I, [2025-03-13T09:19:44.959977 #23521]  INFO -- : (0.000021s) SELECT count(*) AS 'count' FROM `expenses` LIMIT 1
I, [2025-03-13T09:19:44.960010 #23521]  INFO -- : (0.000005s) ROLLBACK
I, [2025-03-13T09:19:44.960025 #23521]  INFO -- : Ending example: ExpenseTracker::Ledger#record when one of the keys is missing rejects the expense as invalid
I, [2025-03-13T09:19:44.960123 #23521]  INFO -- : Starting example: ExpenseTracker::Ledger#record when multiple keys are missing rejects the expense as invalid
I, [2025-03-13T09:19:44.960144 #23521]  INFO -- : (0.000004s) BEGIN
I, [2025-03-13T09:19:44.960199 #23521]  INFO -- : (0.000016s) SELECT count(*) AS 'count' FROM `expenses` LIMIT 1
I, [2025-03-13T09:19:44.960230 #23521]  INFO -- : (0.000005s) ROLLBACK
I, [2025-03-13T09:19:44.960245 #23521]  INFO -- : Ending example: ExpenseTracker::Ledger#record when multiple keys are missing rejects the expense as invalid
I, [2025-03-13T09:23:02.355718 #23813]  INFO -- : Starting example: 
I, [2025-03-13T09:23:14.777019 #23931]  INFO -- : Starting example: 
I, [2025-03-13T09:23:16.966133 #23931]  INFO -- : (0.000032s) BEGIN
I, [2025-03-13T09:23:16.966925 #23931]  INFO -- : (0.000532s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-13T09:23:16.967093 #23931]  INFO -- : (0.000061s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-13T09:23:16.971862 #23931]  INFO -- : (0.000570s) SELECT * FROM `expenses`
I, [2025-03-13T09:23:16.975343 #23931]  INFO -- : (0.000318s) ROLLBACK
I, [2025-03-13T09:23:16.975417 #23931]  INFO -- : Ending example: 
I, [2025-03-13T09:23:16.975790 #23931]  INFO -- : Starting example: 
I, [2025-03-13T09:23:22.165625 #23993]  INFO -- : Starting example: 
I, [2025-03-14T10:11:12.462433 #23354]  INFO -- : Starting example: 
I, [2025-03-14T10:12:29.488415 #23644]  INFO -- : Starting example: Expense Tracker API records submitted expenses
I, [2025-03-14T10:12:29.488733 #23644]  INFO -- : (0.000020s) BEGIN
I, [2025-03-14T10:12:29.489458 #23644]  INFO -- : (0.000347s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-14T10:12:29.489565 #23644]  INFO -- : (0.000040s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.490071 #23644]  INFO -- : (0.000010s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Zoo', 15.25, '2017-06-10')
I, [2025-03-14T10:12:29.490128 #23644]  INFO -- : (0.000014s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.490279 #23644]  INFO -- : (0.000007s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Whole Foods', 95.2, '2017-06-11')
I, [2025-03-14T10:12:29.490355 #23644]  INFO -- : (0.000012s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.490730 #23644]  INFO -- : (0.000211s) SELECT * FROM `expenses` WHERE (`date` = '2017-06-10')
I, [2025-03-14T10:12:29.491992 #23644]  INFO -- : (0.000214s) ROLLBACK
I, [2025-03-14T10:12:29.492043 #23644]  INFO -- : Ending example: Expense Tracker API records submitted expenses
I, [2025-03-14T10:12:29.493103 #23644]  INFO -- : Starting example: ExpenseTracker::Ledger#record successfully saves an expense in the DB
I, [2025-03-14T10:12:29.493170 #23644]  INFO -- : (0.000011s) BEGIN
I, [2025-03-14T10:12:29.493497 #23644]  INFO -- : (0.000196s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-14T10:12:29.493570 #23644]  INFO -- : (0.000043s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.495214 #23644]  INFO -- : (0.000060s) SELECT * FROM `expenses`
I, [2025-03-14T10:12:29.496087 #23644]  INFO -- : (0.000198s) ROLLBACK
I, [2025-03-14T10:12:29.496120 #23644]  INFO -- : Ending example: ExpenseTracker::Ledger#record successfully saves an expense in the DB
I, [2025-03-14T10:12:29.496306 #23644]  INFO -- : Starting example: ExpenseTracker::Ledger#record when multiple keys are missing rejects the expense as invalid
I, [2025-03-14T10:12:29.496341 #23644]  INFO -- : (0.000006s) BEGIN
I, [2025-03-14T10:12:29.496538 #23644]  INFO -- : (0.000035s) SELECT count(*) AS 'count' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.496580 #23644]  INFO -- : (0.000007s) ROLLBACK
I, [2025-03-14T10:12:29.496600 #23644]  INFO -- : Ending example: ExpenseTracker::Ledger#record when multiple keys are missing rejects the expense as invalid
I, [2025-03-14T10:12:29.496724 #23644]  INFO -- : Starting example: ExpenseTracker::Ledger#record when one of the keys is missing rejects the expense as invalid
I, [2025-03-14T10:12:29.496754 #23644]  INFO -- : (0.000005s) BEGIN
I, [2025-03-14T10:12:29.496862 #23644]  INFO -- : (0.000020s) SELECT count(*) AS 'count' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.496903 #23644]  INFO -- : (0.000005s) ROLLBACK
I, [2025-03-14T10:12:29.496925 #23644]  INFO -- : Ending example: ExpenseTracker::Ledger#record when one of the keys is missing rejects the expense as invalid
I, [2025-03-14T10:12:29.497044 #23644]  INFO -- : Starting example: ExpenseTracker::Ledger#expenses_on returns a blank array when there are no matching expenses
I, [2025-03-14T10:12:29.497072 #23644]  INFO -- : (0.000004s) BEGIN
I, [2025-03-14T10:12:29.497188 #23644]  INFO -- : (0.000028s) SELECT * FROM `expenses` WHERE (`date` = '2017-06-10')
I, [2025-03-14T10:12:29.497222 #23644]  INFO -- : (0.000005s) ROLLBACK
I, [2025-03-14T10:12:29.497240 #23644]  INFO -- : Ending example: ExpenseTracker::Ledger#expenses_on returns a blank array when there are no matching expenses
I, [2025-03-14T10:12:29.497317 #23644]  INFO -- : Starting example: ExpenseTracker::Ledger#expenses_on returns all expenses for the provided date
I, [2025-03-14T10:12:29.497341 #23644]  INFO -- : (0.000004s) BEGIN
I, [2025-03-14T10:12:29.497589 #23644]  INFO -- : (0.000174s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-14T10:12:29.497630 #23644]  INFO -- : (0.000016s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.497672 #23644]  INFO -- : (0.000008s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-10')
I, [2025-03-14T10:12:29.497704 #23644]  INFO -- : (0.000012s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.497741 #23644]  INFO -- : (0.000006s) INSERT INTO `expenses` (`payee`, `amount`, `date`) VALUES ('Starbucks', 5.75, '2017-06-11')
I, [2025-03-14T10:12:29.497772 #23644]  INFO -- : (0.000014s) SELECT max(`id`) AS 'max' FROM `expenses` LIMIT 1
I, [2025-03-14T10:12:29.497836 #23644]  INFO -- : (0.000028s) SELECT * FROM `expenses` WHERE (`date` = '2017-06-10')
I, [2025-03-14T10:12:29.498035 #23644]  INFO -- : (0.000132s) ROLLBACK
I, [2025-03-14T10:12:29.498051 #23644]  INFO -- : Ending example: ExpenseTracker::Ledger#expenses_on returns all expenses for the provided date
